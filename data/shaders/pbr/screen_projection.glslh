#ifndef LULLABY_DATA_SHADERS_PBR_SCREEN_PROJECTION_GLSLH_
#define LULLABY_DATA_SHADERS_PBR_SCREEN_PROJECTION_GLSLH_

// TODO: Switch these to directly sample using textureProj or
// textureProjLod.

// Converts position to screen UV such that any point within the view frustum
// maps to [0, 1]^2. The transform matrix must transform from whatever space pos
// is in into clip space, and should *not* incorporate EIS.
vec2 PosToScreenUv(vec4 pos, mat4 transform) {
  vec4 clip_pos = transform * pos;
  return 0.5 * (vec2(1.0) + clip_pos.xy / clip_pos.w);
}

// Similar to PosToScreenUv, but points outside the view frustum map to points
// clamped within [0, 1]^2, preserving direction from center.
vec2 PosToClampedScreenUv(vec4 pos, mat4 transform) {
  vec4 clip_pos = transform * pos;
  vec2 ndc_pos = clip_pos.xy / clip_pos.w;
  float len = max(abs(ndc_pos.x), abs(ndc_pos.y));
  ndc_pos /= max(len, 1.0);
  return 0.5 * (vec2(1.0) + ndc_pos);
}

#endif  // LULLABY_DATA_SHADERS_PBR_SCREEN_PROJECTION_GLSLH_
