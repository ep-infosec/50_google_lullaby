load(
    "@//third_party/flatbuffers:build_defs.bzl",
    "flatbuffer_cc_library",
)

package(
    default_visibility = ["//visibility:public"],
)

FPLBASE_DEFINES = [
    "FPLBASE_DISABLE_NEW_DELETE_OPERATORS",
    "FPLBASE_ANDROID_VR=0",
    "FPLBASE_BACKEND_STDLIB",
    "GL_GLEXT_PROTOTYPES",
]

flatbuffer_cc_library(
    name = "fplbase_fbs",
    srcs = [
        "schemas/common.fbs",
        "schemas/materials.fbs",
        "schemas/mesh.fbs",
        "schemas/shader.fbs",
        "schemas/texture_atlas.fbs",
    ],
    include_paths = [
        "schemas",
    ],
)

cc_library(
    name = "glplatform",
    hdrs = [
        "include/fplbase/glplatform.h",
    ],
    deps = [
        "@//third_party/gl",
    ],
)

cc_library(
    name = "render_state",
    hdrs = [
        "include/fplbase/internal/detailed_render_state.h",
        "include/fplbase/render_state.h",
        "include/fplbase/viewport.h",
    ],
    includes = ["include"],
    deps = [
        "@mathfu//:mathfu",
    ],
)

cc_library(
    name = "utilities",
    srcs = [
        "src/logging.cpp",
        "src/logging_stdlib.cpp",
        "src/file_utilities.cpp",
        "src/file_utilities_stdlib.cpp",
    ],
    hdrs = [
        "include/fplbase/config.h",
        "include/fplbase/logging.h",
        "include/fplbase/file_utilities.h",
    ],
    includes = ["include"],
    defines = FPLBASE_DEFINES,
)

cc_library(
    name = "fplbase",
    srcs = [
        "src/asset_manager.cpp",
        "src/async_loader_stdlib.cpp",
        "src/environment_stdlib.cpp",
        "src/gpu_debug_gl.cpp",
        "src/input.cpp",
        "src/input_stdlib.cpp",
        "src/material.cpp",
        "src/mesh_common.cpp",
        "src/mesh_gl.cpp",
        "src/mesh_impl_gl.h",
        "src/precompiled.h",
        "src/preprocessor.cpp",
        "src/render_target_common.cpp",
        "src/render_target_gl.cpp",
        "src/render_utils_gl.cpp",
        "src/renderer_common.cpp",
        "src/renderer_gl.cpp",
        "src/shader_common.cpp",
        "src/shader_gl.cpp",
        "src/texture_common.cpp",
        "src/texture_gl.cpp",
        "src/texture_headers.h",
        "src/type_conversions_gl.cpp",
        "src/utilities.cpp",
        "src/utilities_stdlib.cpp",
        "src/version.cpp",
    ],
    hdrs = [
        "include/fplbase/asset.h",
        "include/fplbase/asset_manager.h",
        "include/fplbase/async_loader.h",
        "include/fplbase/debug_markers.h",
        "include/fplbase/environment.h",
        "include/fplbase/flatbuffer_utils.h",
        "include/fplbase/fpl_common.h",
        "include/fplbase/gpu_debug.h",
        "include/fplbase/handles.h",
        "include/fplbase/input.h",
        "include/fplbase/internal/type_conversions_gl.h",
        "include/fplbase/keyboard_keycodes.h",
        "include/fplbase/keyboard_scancodes.h",
        "include/fplbase/logging.h",
        "include/fplbase/material.h",
        "include/fplbase/mesh.h",
        "include/fplbase/preprocessor.h",
        "include/fplbase/render_target.h",
        "include/fplbase/render_utils.h",
        "include/fplbase/renderer.h",
        "include/fplbase/renderer_android.h",
        "include/fplbase/renderer_hmd.h",
        "include/fplbase/shader.h",
        "include/fplbase/texture.h",
        "include/fplbase/texture_atlas.h",
        "include/fplbase/utilities.h",
        "include/fplbase/version.h",
        "include/fplbase/viewport.h",
    ],
    defines = [
        "FPLBASE_DISABLE_NEW_DELETE_OPERATORS",
        "FPLBASE_ANDROID_VR=0",
        "FPLBASE_BACKEND_STDLIB",
        "GL_GLEXT_PROTOTYPES",
    ],
    includes = [
        "include",
    ],
    deps = [
        ":fplbase_fbs",
        ":utilities",
        ":render_state",
        ":glplatform",
        "@flatbuffers//:flatbuffers",
        "@fplutil//:fplutil",
        "@libwebp//:webp_decode",
        "@stb//:stb",
        "@//third_party/stb_image_resize:stb_image_resize",
    ],
)
